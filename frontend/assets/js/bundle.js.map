{"version":3,"file":"bundle.js","mappings":"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A;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA,mEAAmE;AACnE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B,uCAAuC;;AAEvC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAsB;;;;;;;;;;AC5MT;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,2CAA2C,mBAAO,CAAC,8EAAqB;;AAExE,oCAAoC,mBAAO,CAAC,gEAAc;;AAE1D,uCAAuC,uCAAuC;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oGAAoG,GAAG,aAAa,GAAG;AACvH;AACA,MAAM;;;AAGN;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,yBAAsB;;;;;;;;;;ACzFT;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,2CAA2C,mBAAO,CAAC,8EAAqB;;AAExE,uCAAuC,uCAAuC;;AAE9E;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA,wCAAwC,IAAI;AAC5C,8EAA8E,EAAE,8EAA8E,EAAE,8GAA8G,EAAE,qEAAqE,IAAI,6CAA6C,EAAE,qCAAqC,IAAI,kEAAkE,IAAI,6CAA6C,EAAE,qCAAqC,IAAI,kEAAkE,IAAI,6CAA6C,EAAE,qCAAqC,IAAI,kEAAkE,IAAI,6CAA6C,EAAE,qCAAqC,IAAI,kEAAkE,IAAI,kDAAkD,IAAI,oEAAoE,IAAI,4BAA4B,GAAG;;AAE9mC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAsB;;;;;;;;;;ACnET;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,wBAAwB,2BAA2B,2EAA2E,kCAAkC,wBAAwB,OAAO,kCAAkC,mIAAmI;;AAEpW;AACA;;AAEA;AACA;;AAEA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA,yBAAsB;;;;;;;;;;ACrBT;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAsB;;;;;;UCrBtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,mEAAuB","sources":["webpack://typescript/./src/form-control.ts","webpack://typescript/./node_modules/validator/lib/isByteLength.js","webpack://typescript/./node_modules/validator/lib/isEmail.js","webpack://typescript/./node_modules/validator/lib/isFQDN.js","webpack://typescript/./node_modules/validator/lib/isIP.js","webpack://typescript/./node_modules/validator/lib/util/assertString.js","webpack://typescript/./node_modules/validator/lib/util/merge.js","webpack://typescript/webpack/bootstrap","webpack://typescript/./src/index.ts"],"sourcesContent":["// import  validator  from 'validator';\r\n// const submit = document.getElementById('submit') as HTMLButtonElement\r\n\r\n// submit.addEventListener('click', eventVerificar)\r\n\r\n// function eventVerificar(e:Event){\r\n//     e.preventDefault()\r\n//     const nameUser = document.getElementById('username') as HTMLInputElement\r\n//     const emailUser = document.getElementById('email') as HTMLInputElement\r\n//     const passWUser = document.getElementById('password') as HTMLInputElement\r\n//     const passW2User = document.getElementById('password2') as HTMLInputElement\r\n    \r\n//     const opa = console.log('ISSO AQUI É O NAME: ' + nameUser.value + '  ISSO AQUI É O EMAIL: ' + emailUser.value)\r\n//     const nameMsg = document.querySelector('.error-message-name') as HTMLSpanElement\r\n//     const emailMsg= document.querySelector('.error-message-email') as HTMLSpanElement\r\n//     const passWMsg= document.querySelector('.error-message-passW') as HTMLSpanElement\r\n//     const passW2Msg= document.querySelector('.error-message-passW2') as HTMLSpanElement\r\n\r\n//     let msgErrorName: string[] = []\r\n//     let msgErrorEmail: string[] = []\r\n//     let msgErrorPassW: string[] = []\r\n//     let msgErrorPassW2: string[] = []\r\n\r\n\r\n//     console.log(emailUser.value.length)\r\n\r\n//     //ver se tá vazio\r\n//     if(!nameUser.value){\r\n//         msgErrorName.push(`Campo inválido por está vazio`)\r\n//     }\r\n\r\n//     if(nameUser.value.length < 6){\r\n//         msgErrorName.push(`Campo inválido minimo de 6 caracteres`)\r\n//     }\r\n\r\n//     if(!emailUser.value){\r\n//         msgErrorEmail.push(`Campo inválido por está vazio`)\r\n//     }\r\n\r\n//     if(!validator.isEmail(emailUser.value)){\r\n//         msgErrorEmail.push(`Campo inválido, email incorreto`)\r\n//     }\r\n\r\n//     if(!passWUser.value){\r\n//         msgErrorPassW.push(`Campo inválido, campo vazio`)\r\n//     }\r\n\r\n//     if(!passW2User.value){\r\n//         msgErrorPassW2.push(`Campo inválido, campo vazio`)\r\n//     }\r\n\r\n//     if(passWUser.value.length < 6){\r\n//         msgErrorPassW.push(`Campo inválido, precisa no minimo de 6 caracteres`)\r\n//     }\r\n\r\n//     if(passW2User.value.length < 6){\r\n//         msgErrorPassW2.push(`Campo inválido, precisa no minimo de 6 caracteres`)\r\n//     }\r\n\r\n//     if( passWUser.value != passW2User.value){\r\n//         msgErrorPassW.push(`Campo inválido, está diferente de confirma senha`)\r\n//         msgErrorPassW2.push(`Campo inválido, está diferente de sua senha`)\r\n//     }\r\n\r\n\r\n\r\n\r\n//     //MSG DE ERRO\r\n//     if(msgErrorName.length > 0){\r\n//         nameMsg.textContent = msgErrorName.join(' ')\r\n//         nameMsg.style.display = 'block'\r\n//         setTimeout(() =>{\r\n//             nameMsg.style.display = 'none'\r\n//         },5000)\r\n//         // return nameMsg\r\n//     }\r\n\r\n//     if(msgErrorEmail.length > 0){\r\n//         emailMsg.textContent = msgErrorEmail.join(' ')\r\n//         emailMsg.style.display = 'block'\r\n//         setTimeout(()=>{\r\n//             emailMsg.style.display = 'none'\r\n//         },5000)\r\n//         // return emailMsg\r\n//     }\r\n\r\n//     if(msgErrorPassW.length > 0){\r\n//         passWMsg.textContent = msgErrorPassW.join(' ')\r\n//         passWMsg.style.display = 'block'\r\n//         setTimeout(() => {\r\n//             passWMsg.style.display = 'none'\r\n//         }, 5000)\r\n//         // return passWMsg\r\n//     }\r\n\r\n//     if(msgErrorPassW2.length > 0){\r\n//         passW2Msg.textContent = msgErrorPassW2.join(' ')\r\n//         passW2Msg.style.display = 'block'\r\n//         setTimeout(() => {\r\n//             console.log('entrou aqui')\r\n//             passW2Msg.style.display = 'none'\r\n//         }, 5000);\r\n//         return passW2Msg\r\n//     }\r\n\r\n//     console.log('passou')\r\n//     return \r\n// }\r\nimport isEmail from \"validator/lib/isEmail\"\r\n\r\nconst SHOW_ERROR_MESSAGES = 'show-error-message'\r\n\r\nconst form = document.querySelector('.form') as HTMLFormElement\r\nconst username = document.querySelector('.username') as HTMLInputElement\r\nconst email = document.querySelector('.email') as HTMLInputElement\r\nconst password = document.querySelector('.password') as HTMLInputElement\r\nconst password2 = document.querySelector('.password2') as HTMLInputElement\r\n\r\nform.addEventListener(\"submit\", function(event : Event){\r\n    event.preventDefault();\r\n    hideErrorMessages(this)\r\n    checkForEmptyFields(username,email,password,password2);\r\n    checkEmail(email)\r\n    checkPasswords(password,password2)\r\n    if(shouldSendForm(this)) console.log('Formulário enviado')\r\n    // console.log('oi')\r\n})\r\n\r\nfunction hideErrorMessages(form: HTMLFormElement):void {\r\n    form.querySelectorAll('.' + SHOW_ERROR_MESSAGES).forEach((item) => item.classList.remove(SHOW_ERROR_MESSAGES))\r\n}\r\n\r\nfunction showErrorMessage(input:HTMLInputElement, msg:string):void{\r\n    const formFields = input.parentElement as HTMLElement;\r\n    const errorMessage = formFields.querySelector('.error-message') as HTMLSpanElement\r\n    errorMessage.innerText = msg\r\n    formFields.classList.add(SHOW_ERROR_MESSAGES)\r\n\r\n}\r\n\r\nfunction checkForEmptyFields(...inputs: HTMLInputElement[]) : void{\r\n    inputs.forEach(input => {\r\n        if(!input.value)\r\n            showErrorMessage(input,\"Campo não pode ficar vazio\")\r\n    })\r\n}\r\n\r\nfunction checkEmail(input:HTMLInputElement): void {\r\n    if(!isEmail(input.value)) showErrorMessage(input, 'Email inválido')\r\n}\r\n\r\nfunction checkPasswords(pass: HTMLInputElement, pass2: HTMLInputElement){\r\n    if(pass.value !== pass2.value){\r\n        showErrorMessage(pass,'Senhas não batem')\r\n        showErrorMessage(pass2,'Senhas não batem')\r\n    }\r\n}\r\n\r\nfunction shouldSendForm(form: HTMLFormElement):boolean{\r\n    let send = true\r\n    form.querySelectorAll('.' + SHOW_ERROR_MESSAGES).forEach(() => (send = false))\r\n    return send\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isByteLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isByteLength = _interopRequireDefault(require(\"./isByteLength\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  allow_underscores: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: [],\n  host_whitelist: []\n};\n/* eslint-disable max-len */\n\n/* eslint-disable no-control-regex */\n\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A1-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\n\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  } // check whether display name contains illegal character\n\n\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    } // the quotes in display name must start with character symbol \\\n\n\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isEmail(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n\n    if (display_email) {\n      var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.slice(0, -1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n\n  if (options.host_whitelist.length > 0 && !options.host_whitelist.includes(lower_domain)) {\n    return false;\n  }\n\n  var user = parts.join('@');\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n    var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n    if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n    max: 64\n  }) || !(0, _isByteLength.default)(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n\n  if (!(0, _isFQDN.default)(domain, {\n    require_tld: options.require_tld,\n    ignore_max_length: options.ignore_max_length,\n    allow_underscores: options.allow_underscores\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0, _isIP.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.slice(1, -1);\n\n      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import './form-control'\r\n\r\n"],"names":[],"sourceRoot":""}